{"version":3,"sources":["components/todo.jsx","components/addItem.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","showEditer","setEditor","newInput","setInput","todo","onChange","onDelete","onModify","className","completed","type","defaultChecked","id","onDoubleClick","inputText","title","htmlFor","currentTarget","value","placeholder","onClick","Form","name","onSubmit","todoId","App","handelChange","e","inputs","state","cloneDinputs","setState","handleSubmit","preventDefault","todos","push","newTodo","handelCompleteTask","currentIt","parseInt","task","filter","handleDelete","handleModify","edite","this","checkList","length","getCompleted","map","atodo","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA8DeA,EA3DF,SAACC,GACZ,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAiBC,EAAjB,KAYEC,EACEN,EADFM,KAAMC,EACJP,EADIO,SAAUC,EACdR,EADcQ,SAAUC,EACxBT,EADwBS,SAQ5B,OACE,qBAAIC,UAAWJ,EAAKK,UAAY,yBAA2B,eAA3D,UACE,uBACEJ,SAAUA,EACVK,KAAK,WACLC,eAAgBP,EAAKK,UACrBG,GAAIR,EAAKQ,KAEX,uBACEC,cAAe,kBA3BDC,EA2BkBV,EAAKW,MA1BzCd,GAAU,QACVE,EAASW,GAFQ,IAACA,GA4Bd,cAAY,OACZE,QAASZ,EAAKQ,GAHhB,SAKGR,EAAKW,QAER,sBAAKP,UAAWR,EAAa,gBAAkB,gBAA/C,UACE,uBACEK,SA9Ba,SAAC,GAAkC,IAAjBS,EAAgB,EAA/BG,cACtBd,EAASW,EAAUI,QA8BbR,KAAK,OACLQ,MAAOhB,EACPiB,YAAY,WAEd,wBAAQC,QAAS,kBA1BrBnB,GAAU,QACVM,EAASL,EAAUE,EAAKQ,KAyBmBF,KAAK,SAASF,UAAU,SAA/D,uBAIF,wBACEY,QAAS,kBAAMd,EAASF,EAAKQ,KAC7BF,KAAK,SACLF,UAAU,iBAHZ,wBC5BSa,EApBF,SAACvB,GACZ,IACEoB,EACEpB,EADFoB,MAAOI,EACLxB,EADKwB,KAAMjB,EACXP,EADWO,SAAUkB,EACrBzB,EADqByB,SAEzB,OACE,uBACEA,SAAUA,EACVf,UAAU,yDAFZ,UAIE,uBACEH,SAAUA,EACVK,KAAK,OACLQ,MAAOA,EACPC,YAAY,cACZG,KAAMA,IAER,wBAAQZ,KAAK,SAAb,wBCdFc,EAAS,EAmGEC,E,kDAjGb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAUR4B,aAAe,SAACC,GACd,IAAQC,EAAW,EAAKC,MAAhBD,OACFE,EAAY,eAAQF,GAC1BE,EAAaH,EAAEV,cAAcK,MAAQK,EAAEV,cAAcC,MACrD,EAAKa,SAAS,CAAEH,OAAQE,KAfP,EAkBnBE,aAAe,SAACL,GACdA,EAAEM,iBACF,IAAMJ,EAAK,eAAQ,EAAKA,OAClBK,EAAK,YAAOL,EAAMK,OACxBV,GAAU,EACVU,EAAMC,KAAK,CACTvB,GAAIY,EACJT,MAAOc,EAAMD,OAAOQ,QACpB3B,WAAW,IAEb,EAAKsB,SAAS,CAAEG,WA5BC,EA+BnBG,mBAAqB,SAACV,GACpB,IAAMW,EAAYC,SAASZ,EAAEV,cAAcL,GAAI,IACzCiB,EAAK,eAAQ,EAAKA,OAClBW,EAAOX,EAAMK,MAAMO,QAAO,SAACrC,GAAD,OAAUA,EAAKQ,KAAO0B,KAAW,GACjEE,EAAK/B,WAAa+B,EAAK/B,UACvB,EAAKsB,SAASF,IApCG,EAuCnBa,aAAe,SAAC9B,GACd,IACMsB,EADK,eAAQ,EAAKL,OACJK,MAAMO,QAAO,SAACrC,GAAD,OAAUA,EAAKQ,KAAO2B,SAAS3B,EAAI,OACpE,EAAKmB,SAAS,CAAEG,WA1CC,EA6CnBS,aAAe,SAAC7B,EAAWF,GACzB,IAAMiB,EAAK,eAAQ,EAAKA,OAClBK,EAAK,YAAOL,EAAMK,OACXA,EAAMO,QAAO,SAACD,GAAD,OAAUA,EAAK5B,KAAOA,KAAI,GAC/CG,MAAQD,EACb,EAAKiB,SAAS,CAAEG,WAhDhB,EAAKL,MAAQ,CACXK,MAAO,GACPN,OAAQ,CACNQ,QAAS,GACTQ,MAAO,KANM,E,0CAqDnB,WAAU,IAAD,OACP,EAA0BC,KAAKhB,MAAvBK,EAAR,EAAQA,MAAON,EAAf,EAAeA,OACTkB,EAA6B,IAAjBZ,EAAMa,OAAe,6CAA+C,KAChFC,EAAY,UAAMd,EAAMO,QAAO,SAACD,GAAD,OAAUA,EAAK/B,aAAWsC,OAA7C,YAChBb,EAAMa,OADU,KAGlB,OACE,yBAASvC,UAAU,kDAAnB,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,qCAAf,UACE,sBAAKA,UAAU,YAAf,UACE,2CACA,qBAAKA,UAAU,QAAf,SAAwB0B,EAAMa,YAEhC,sBAAKvC,UAAU,iBAAf,UACE,iDACA,qBAAKA,UAAU,QAAf,SAAwBwC,UAG5B,cAAC,EAAD,CACE9B,MAAOU,EAAOQ,QACd/B,SAAUwC,KAAKnB,aACfH,SAAUsB,KAAKb,aACfV,KAAK,YAEP,mBAAGd,UAAU,YAAb,SAA0BsC,IAC1B,oBAAItC,UAAU,YAAd,SACG0B,EAAMe,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACE3C,SAAU,EAAKoC,aAEftC,SAAU,EAAKgC,mBACfjC,KAAM8C,EACN5C,SAAU,EAAKoC,cAHVQ,EAAMtC,kB,GArFTuC,aCQHC,G,MAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8cb74860.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\n\nconst Todo = (props) => {\n  const [showEditer, setEditor] = useState(false);\n  const [newInput, setInput] = useState('');\n\n  const handelShow = (inputText) => {\n    setEditor(true);\n    setInput(inputText);\n  };\n\n  const handleChange = ({ currentTarget: inputText }) => {\n    setInput(inputText.value);\n  };\n\n  const {\n    todo, onChange, onDelete, onModify,\n  } = props;\n\n  const handleModify = () => {\n    setEditor(false);\n    onModify(newInput, todo.id);\n  };\n\n  return (\n    <li className={todo.completed ? 'todo-control completed' : 'todo-control'}>\n      <input\n        onChange={onChange}\n        type=\"checkbox\"\n        defaultChecked={todo.completed}\n        id={todo.id}\n      />\n      <label\n        onDoubleClick={() => handelShow(todo.title)}\n        aria-hidden=\"true\"\n        htmlFor={todo.id}\n      >\n        {todo.title}\n      </label>\n      <div className={showEditer ? 'd-flex modify' : 'd-none modify'}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          value={newInput}\n          placeholder=\"Modify\"\n        />\n        <button onClick={() => handleModify()} type=\"button\" className=\"submit\">\n          modify\n        </button>\n      </div>\n      <button\n        onClick={() => onDelete(todo.id)}\n        type=\"button\"\n        className=\"delele ml-auto\"\n      >\n        delete\n      </button>\n    </li>\n  );\n};\n\nexport default Todo;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst Form = (props) => {\n  const {\n    value, name, onChange, onSubmit,\n  } = props;\n  return (\n    <form\n      onSubmit={onSubmit}\n      className=\"form d-flex align-items-center justify-content-between\"\n    >\n      <input\n        onChange={onChange}\n        type=\"text\"\n        value={value}\n        placeholder=\"Add todo...\"\n        name={name}\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\nexport default Form;\n","import React, { Component } from 'react';\nimport 'bootstrap';\nimport Todo from './components/todo';\nimport Form from './components/addItem';\n\nlet todoId = 0;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      inputs: {\n        newTodo: '',\n        edite: '',\n      },\n    };\n  }\n\n  handelChange = (e) => {\n    const { inputs } = this.state;\n    const cloneDinputs = { ...inputs };\n    cloneDinputs[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ inputs: cloneDinputs });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const state = { ...this.state };\n    const todos = [...state.todos];\n    todoId += 1;\n    todos.push({\n      id: todoId,\n      title: state.inputs.newTodo,\n      completed: false,\n    });\n    this.setState({ todos });\n  };\n\n  handelCompleteTask = (e) => {\n    const currentIt = parseInt(e.currentTarget.id, 10);\n    const state = { ...this.state };\n    const task = state.todos.filter((todo) => todo.id === currentIt)[0];\n    task.completed = !task.completed;\n    this.setState(state);\n  };\n\n  handleDelete = (id) => {\n    const state = { ...this.state };\n    const todos = state.todos.filter((todo) => todo.id !== parseInt(id, 10));\n    this.setState({ todos });\n  };\n\n  handleModify = (inputText, id) => {\n    const state = { ...this.state };\n    const todos = [...state.todos];\n    const todo = todos.filter((task) => task.id === id)[0];\n    todo.title = inputText;\n    this.setState({ todos });\n  };\n\n  render() {\n    const { todos, inputs } = this.state;\n    const checkList = todos.length === 0 ? 'There is nothing to do in the todo-list...' : null;\n    const getCompleted = `${todos.filter((task) => task.completed).length}/${\n      todos.length\n    } `;\n    return (\n      <section className=\"container d-flex flex-column align-items-center\">\n        <div className=\"main-container\">\n          <h1 className=\"todo-heading\">Todos</h1>\n          <div className=\"counters d-flex align-items-center\">\n            <div className=\"countTask\">\n              <h5>All tasks</h5>\n              <div className=\"count\">{todos.length}</div>\n            </div>\n            <div className=\"countCompleted\">\n              <h5>Tasks completed</h5>\n              <div className=\"count\">{getCompleted}</div>\n            </div>\n          </div>\n          <Form\n            value={inputs.newTodo}\n            onChange={this.handelChange}\n            onSubmit={this.handleSubmit}\n            name=\"newTodo\"\n          />\n          <p className=\"checkList\">{checkList}</p>\n          <ul className=\"todo-list\">\n            {todos.map((atodo) => (\n              <Todo\n                onModify={this.handleModify}\n                key={atodo.id}\n                onChange={this.handelCompleteTask}\n                todo={atodo}\n                onDelete={this.handleDelete}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/App.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}